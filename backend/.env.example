# ================================================================
# AI YouTuber Studio - Environment Configuration Template
# ================================================================
# Copy this file to .env and fill in your actual values
# Command: cp .env.example .env
# ================================================================

# ================================================================
# GOOGLE OAUTH (Required for YouTube integration)
# ================================================================
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your_google_client_id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=GOCSPX-your_google_client_secret
GOOGLE_OAUTH_REDIRECT_URI=http://localhost:8000/api/auth/oauth/google/callback

# ================================================================
# DATABASE (PostgreSQL)
# ================================================================
# AWS RDS (Production)
DATABASE_URL=postgresql://username:password@your-rds-endpoint.region.rds.amazonaws.com:5432/database_name

# Local PostgreSQL (Development) - uncomment if using local DB
# DATABASE_URL=postgresql://postgres:postgres@localhost:5432/ai_youtube_studio

# ================================================================
# CACHE & QUEUE (Redis)
# ================================================================
# Via SSH tunnel to EC2 (Production)
REDIS_URL=redis://127.0.0.1:6379/0

# Docker/Local (Development) - uncomment if using local Redis
# REDIS_URL=redis://localhost:6379/0

# ================================================================
# VECTOR DATABASE (ChromaDB)
# ================================================================
# Via SSH tunnel to EC2 (Production)
CHROMA_HOST=127.0.0.1
CHROMA_PORT=8001

# Docker/Local (Development) - uncomment if using local ChromaDB
# CHROMA_HOST=localhost
# CHROMA_PORT=8001

# ================================================================
# STORAGE (AWS S3 or MinIO)
# ================================================================
# Storage Type: 's3' for AWS S3, 'minio' for local MinIO
STORAGE_TYPE=s3

# AWS S3 (Production)
AWS_S3_BUCKET=your-s3-bucket-name
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=AKIA...your_access_key_id
AWS_SECRET_ACCESS_KEY=your_secret_access_key

# MinIO (Local Development) - uncomment if using MinIO
# STORAGE_TYPE=minio
# MINIO_ENDPOINT=localhost:9000
# MINIO_ACCESS_KEY=minioadmin
# MINIO_SECRET_KEY=minioadmin
# MINIO_BUCKET=youtube-data

# ================================================================
# AI / LLM PROVIDER
# ================================================================
# LLM Provider: 'gemini' or 'openai'
LLM_PROVIDER=gemini

# Google Gemini API (Recommended - has free tier)
# Get from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=AIza...your_gemini_api_key

# OpenAI API (Better quality, costs more)
# Get from: https://platform.openai.com/api-keys
# Required for Whisper transcription regardless of LLM provider
OPENAI_API_KEY=sk-proj-...your_openai_api_key

# ================================================================
# SECURITY
# ================================================================
# JWT Secret for session management (use a long random string)
JWT_SECRET=your_very_long_random_secret_key_here

# ================================================================
# BACKEND CONFIGURATION
# ================================================================
# CORS origins (comma-separated, no spaces)
BACKEND_CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# ================================================================
# OPTIONAL: AWS RDS DETAILS (for reference)
# ================================================================
# These are optional and only needed if you want to track them separately
# RDS_ENDPOINT=your-rds-endpoint.region.rds.amazonaws.com
# RDS_HOST=your-rds-endpoint.region.rds.amazonaws.com
# RDS_DB=ai_youtuber_studio
# RDS_USER=postgres
# RDS_PASS=your_rds_password

# ================================================================
# NOTES
# ================================================================
# 1. Never commit this file to version control if it contains real secrets
# 2. The .env.example should be committed to show the structure
# 3. For production, consider using AWS Secrets Manager or similar
# 4. Minimum required variables for basic functionality:
#    - GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET
#    - DATABASE_URL
#    - REDIS_URL
#    - AWS_S3_BUCKET, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY
#    - GEMINI_API_KEY or OPENAI_API_KEY
#    - JWT_SECRET
# ================================================================
