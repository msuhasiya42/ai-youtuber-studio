version: '3.9'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: youtubestudio
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minioadmin minioadmin &&
      mc mb -p local/youtube-data || true &&
      mc anonymous set download local/youtube-data || true
      "

  chroma:
    image: chromadb/chroma:latest
    environment:
      - IS_PERSISTENT=TRUE
    ports:
      - "8001:8000"
    volumes:
      - chroma-data:/chroma/.chroma

  backend:
    build: ../backend
    env_file:
      - ../.env.example
    environment:
      DATABASE_URL: postgresql://user:pass@postgres:5432/youtubestudio
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: youtube-data
      CHROMA_HOST: chroma
      CHROMA_PORT: 8000
      BACKEND_CORS_ORIGINS: http://localhost:3000
    depends_on:
      - postgres
      - redis
      - minio
      - createbuckets
      - chroma
    ports:
      - "8000:8000"

  worker:
    build: ../backend
    command: celery -A celery_worker.app worker --loglevel=INFO
    env_file:
      - ../.env.example
    environment:
      DATABASE_URL: postgresql://user:pass@postgres:5432/youtubestudio
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: youtube-data
      CHROMA_HOST: chroma
      CHROMA_PORT: 8000
    depends_on:
      - backend
      - redis

  poller:
    build: ../backend
    command: python -m app.services.metrics_poller
    env_file:
      - ../.env.example
    environment:
      DATABASE_URL: postgresql://user:pass@postgres:5432/youtubestudio
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - backend
      - redis

  frontend:
    build: ../frontend
    env_file:
      - ../.env.example
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000/ws
    depends_on:
      - backend
    ports:
      - "3000:3000"

volumes:
  pgdata:
  minio-data:
  chroma-data:


